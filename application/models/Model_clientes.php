<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');    class Model_clientes extends CI_Model {        public function getClientes($codEmpresa){            return $this->db->select("c.*, p.descricao as descricaoPlano")                ->from("cliente c")                ->join("contrato con", "con.codCliente = c.codCliente")                ->join("plano p", "p.codPlano = con.codPlano")                ->where("con.codEmpresa", $codEmpresa)                ->where("con.codCliente>", 0)            ->get();        }                 public function Inserir($parametros){            $this->db->insert("cliente", $parametros);            return $this->db->insert_id();        }                public function getClienteByName($nome, $codEmpresa){                        return $this->db->get_where("cliente", array("nome" => $nome, "codEmpresa" => $codEmpresa));                    }                public function getCliente($codCliente){            return $this->db->select("cli.*, c.descricao as cidade, e.UF")                    ->from("cliente cli")                    ->join("cidade c", "c.codCidade = cli.codCidade")                    ->join("estado e", "e.codEstado = c.codEstado")                    ->where("cli.codCliente",$codCliente)                    ->get();        }                    public function getServicosPrestados($codCliente, $codEmpresa){            return $this->db->select("count(*) as qtd, s.descricao, (select count(*) from servicoprestado where codCliente = $codCliente) as total")                    ->from("servicoprestado sp")                    ->join("servico s", "s.codServico = sp.codServico")                    ->where("codCliente",$codCliente)                    ->where("codEmpresa",$codEmpresa)                    ->group_by("sp.codServico")                    ->get();        }                public function aniversariantes($codEmpresa){            return $this->db->select("*")                    ->from("cliente")                    ->where("DATE_FORMAT(nascimento,'%m-%d') = DATE_FORMAT(CURDATE(),'%m-%d')", null)                    ->where("codEmpresa", $codEmpresa)                    ->where("codCliente>", 0)                    ->get();                            }        public function getHistorico($codCliente, $codEmpresa){            return $this->db->query("select c.codCompromisso as codigo, 'Compromisso' as 'tipo',                                         c.descricao, DATE_FORMAT(c.horario,'%d/%m/%Y') as 'data', n.status, c.resumo,                                         DATEDIFF(c.horario, CURDATE()) as TempoPassado from compromisso c                                    join notaentrada n on n.codCompromisso = c.codCompromisso                                    where c.codCliente = ? and c.codEmpresa = $codEmpresa                                    union                                    select v.codVenda as codigo, 'Venda' as 'tipo', 'Venda Realizada' as 'descricao',                                         DATE_FORMAT(v.data,'%d/%m/%Y') as 'data', n.status, v.resumoVenda as resumo,                                         DATEDIFF(v.data, CURDATE()) as TempoPassado                                    from venda v                                    join notaentrada n on n.codVenda = v.codVenda                                     where v.codCliente = ? and v.codEmpresa = $codEmpresa                                    order by data desc", array($codCliente, $codCliente));        }}